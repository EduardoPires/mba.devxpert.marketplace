| pages
| - public
|  - home
|  - login
|  - registrar
| - private
|  - dashboard
|  - profile
|  - settings
|  - logout
|  - produtos-favoritos
|  - delete-account
|  - change-password
|  - change-email
|  - change-username
|  - change-phone-number
|  - change-address 


Lista,Tarefa
Planejamento e Arquitetura,"Definir estrutura dos 3 projetos: MVC, API, SPA"
Planejamento e Arquitetura,"Definir tecnologias: C# .NET 8, Angular/Blazor, SQLite para Dev"
Planejamento e Arquitetura,"Criar modelo de entidades: Vendedor, Cliente, Produto, Categoria"
Planejamento e Arquitetura,"Mapear todos os casos de uso (Admin, Vendedor, Cliente)"
Back-End (API REST),Criar projeto ASP.NET Core Web API
Back-End (API REST),Configurar JWT para autenticação
Back-End (API REST),"Expor endpoints REST para: Produtos (GET, POST, PUT, DELETE), Categorias (GET), Vendedores (GET), Clientes (GET, POST, PUT)"
Back-End (API REST),"Validar: preço > 0, estoque ≥ 0, imagem obrigatória"
Back-End (API REST),Aplicar restrições por roles/claims
Back-End (API REST),Configurar Swagger com autenticação JWT
Administração (MVC),Criar projeto ASP.NET Core MVC
Administração (MVC),Autenticação via cookies
Administração (MVC),Cadastro de Vendedor com vínculo ao Identity
Administração (MVC),CRUD de Produtos por Vendedor logado
Administração (MVC),Painel do Administrador: visualizar todos os produtos e vendedores
Administração (MVC),Painel do Administrador: CRUD de Categorias
Administração (MVC),Painel do Administrador: inativar produtos/vendedores
Administração (MVC),Restringir acesso somente a usuários logados
Loja (SPA - Angular ou Blazor),Criar projeto SPA (Angular ou Blazor)
Loja (SPA - Angular ou Blazor),Exibir produtos ativos publicamente
Loja (SPA - Angular ou Blazor),"Página de detalhes do produto: info do produto, vendedor e outros produtos do mesmo vendedor"
Loja (SPA - Angular ou Blazor),Registro/login de Cliente (via API)
Loja (SPA - Angular ou Blazor),Tela de favoritos do Cliente autenticado
Loja (SPA - Angular ou Blazor),Adicionar/Remover produto favorito (via API)
Banco de Dados e Seed,Configurar EF Core com SQLite (modo dev)
Banco de Dados e Seed,Criar migrations para todas entidades
Banco de Dados e Seed,Implementar seed automático ao iniciar app
Banco de Dados e Seed,Garantir vínculo entre IdentityUser e entidades Cliente/Vendedor via mesmo ID
Segurança e Autenticação,ASP.NET Core Identity para autenticação
Segurança e Autenticação,JWT para a API
Segurança e Autenticação,Cookies para o MVC
Segurança e Autenticação,"Usar Claims para distinguir Admin, Vendedor e Cliente"
Segurança e Autenticação,Bloquear rotas não autenticadas no MVC
Documentação e Entrega,Criar README.md com instruções
Documentação e Entrega,Criar FEEDBACK.md no repositório
Documentação e Entrega,Gravar vídeo de apresentação com arquitetura + demo
Documentação e Entrega,Publicar código no GitHub (template oficial)



| main
| - dev / staging
|  - feature/cleber-autenticacao-mvc (PR)
|  - feature/rafael-autenticacao-api
|  - feature/poliana-cadastro-produto
